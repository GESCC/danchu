<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Food">

	<resultMap type="com.danchu.momuck.vo.Food" id="Food">
		<result property="avgScore" column="avg_score"/>
		<result property="imageMain" column="image_main"/>
		<result property="imageExtra" column="image_extra"/>
		<result property="restaurantSeq" column="restaurant_seq"/>
	</resultMap>
	
	<insert id="insertFood">
		INSERT INTO food (name, price, category, avg_score, image_main, image_extra, restaurant_seq)
		VALUES (#{name}, #{price}, #{category}, #{avgScore}, #{imageMain}, #{imageExtra}, #{restaurantSeq})
	</insert>
	
	<select id="getFoodByNameAndRestaurantSeq" resultMap="Food">
		SELECT *
		FROM food
		WHERE name = #{name} and restaurant_seq = #{restaurantSeq}
	</select>
	
	<select id="getAllFoodList" resultMap="Food">
		SELECT *
		FROM food
		ORDER BY created desc
		LIMIT #{offset}, 10 
	</select>
	
	<select id="getCategoryFoodList" resultMap="Food">
		SELECT *
		FROM food
		WHERE category = #{category}
		ORDER BY created desc
		LIMIT #{offset}, 10 
	</select>
	
	<delete id="deleteFood">
		DELETE FROM food 
		WHERE name = #{name} and restaurant_seq = #{restaurantSeq}
	</delete>
	
	<select id="selectFoodListByKeyword" resultMap="Food">
	SELECT *
	FROM food f, restaurant r
	WHERE f.restaurant_seq = r.seq AND 
	(f.category LIKE CONCAT('%',#{keyword},'%') OR 
	f.name LIKE CONCAT('%',#{keyword},'%') OR
	r.name LIKE CONCAT('%',#{keyword},'%'))
	<if test="sort == 0">
		ORDER BY f.avg_score desc
	</if>
	<if test="sort == 1">
		ORDER BY f.price asc
	</if>
	LIMIT #{offset}, 10
	</select>
</mapper>